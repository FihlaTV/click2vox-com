extends layout

block content
  script.
    var resetPasswordApp =
      angular.module('voxboneApp', [])
      .controller('ResetController', ['$scope', '$http', '$window', function($scope, $http, $window){
        $scope.master = {};

        $scope.update = function(resetpass){
          $scope.master = angular.copy(resetpass);
        };

        $scope.reset = function(form){
          if(form){
            form.$setPristine();
            form.$setUntouched();
          }
          $scope.resetpass = angular.copy($scope.master);
        };

        $scope.reset();

        $scope.resetpass.processForm = function(){
          console.log("--> Submitting...");
          var req = {
            method: 'POST',
            url: '/reset/#{token}',
            headers: {
              'Content-Type': 'application/json; charset=utf-8'
            },
            data: {
              password: $scope.resetpass.upassword,
              confirmation: $scope.resetpass.confirmation
            }
          };
          $http(req)
            .then(function successCallback(response){
              $window.location.href = response.data.redirect;
            }, function errorCallback(response){
              console.log(response);
              document.getElementById("alert").innerHTML = "Confirmation doesn't match, try again.";
              document.getElementById("alert").style.display = "block";
            });
        }
      }]);

      resetPasswordApp.directive('pwCheck', [function () {
        return {
          require: 'ngModel',
          link: function (scope, elem, attrs, ctrl) {
            var firstPassword = '#' + attrs.pwCheck;
            elem.on('input', function () {
              scope.$apply(function () {
                var v = elem.val() === $(firstPassword).val();
                ctrl.$setValidity('pwmatch', v);
              });
            });
          }
        }
      }]);

  .main.registerPage
    .row
      .col-xs-12

        h1 Reset Password

        #alert.alert.alert-danger(style="display: none;")

        #form_container
          .formWrap
            form#reset_form(name="reset_form", novalidate, ng-controller="ResetController")
              .form-group
                label.control-label New Password
                input.form-control(type="password", id="upassword", name="upassword", ng-model="resetpass.upassword", required)
                div(ng-show="reset_form.$submitted || reset_form.upassword.$touched")
                  div(ng-show="reset_form.upassword.$error.required") Password is required
              .form-group
                label.control-label Confirm Password
                input.form-control(type="password" id="confirmation", name="confirmation" ng-model="resetpass.confirmation", required, pw-check="upassword" )
                div(ng-show="reset_form.$submitted || reset_form.confirmation.$touched")
                  div(ng-show="reset_form.confirmation.$error.required") Confirmation is required
                  div(ng-show="reset_form.confirmation.$error.pwmatch") Password confirmation does not match

              button.btn.btn-default#reset(ng-disabled="reset_form.$invalid" ng-click="resetpass.processForm()") Update Password
