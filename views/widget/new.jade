extends ../layout

block extra_head
  link(href="/stylesheets/vxb-widget.css", rel="stylesheet")

block content
  script.
    require([
      'angular',
      'angular-sanitize',
      'jquery',
      'controllers/widget.add',
      'directives/qtip',
      'directives/http.prefix',
      'directives/check.allowed.sip'
    ],
    function(
      angular, ngSanitize, $,
      WidgetAddController, qtipDirective,
      httpPrefixDirective, checkAllowedSip) {

        angular.module('voxboneApp', ['ngSanitize'])
          .directive('qtip', qtipDirective)
          .directive('httpPrefix', httpPrefixDirective)
          .directive('checkAllowedSip', checkAllowedSip)
          .controller('WidgetAddController', WidgetAddController);

        angular.bootstrap(document, ['voxboneApp']);
    });

  .div#control

  .main.createButton(class=showWizard ? 'wizard' : '' ng-controller="WidgetAddController" ng-init="widget.sip_uri='#{addedSip}'")
    .header
      .container
        .row
          .col-xs-12
            h1 Create a WebRTC Click-to-Call Button
            p #[b Questions?] #[a(href="https://click2vox.com/faq" target="_blank") See our Frequently Asked Questions document.]

            #alert-success.alert.alert-warning.ng-cloak(ng-show="!isWebRTCSupported()") #[i.glyphicon.glyphicon-exclamation-sign] You are using a browser that does not support WebRTC. You can configure and preview your buttons, but you will not be able to place test calls. Please use Chrome or Firefox for maximum functionality.
            #alert-success.alert.alert-success(style="display: none;")

          if currentUser.showWizard()
            .col-xs-6.col-xs-offset-3
              .sip-steps
                .step
                  span Add a SIP Address
                .step.right.active
                  span Create a Click-to-Call Button

    .body(ng-class="{newButton: !isWebRTCSupported()}")
      .container
        .row
          .col-md-6.left-col
            form#widget_form(name="widget_form", novalidate)
              section
                .boxPanel
                  .form-group
                    label Configuration Name:
                    input.form-control(type="text", name="configuration_name", ng-model="widget.configuration_name" placeholder="i.e. Sales Button")
              section
                span.title Button Configuration
                .boxPanel
                  .form-group
                    label Button Label:
                    input.form-control(type="text", name="button_label", ng-model="widget.button_label" value="#{defaultBtnLabel}" placeholder="i.e. #{defaultBtnLabel}")
                  .form-group
                    label Button Style:
                    button.btn-style-a(ng-cloak ng-click="setTheme('style-a')") #[span {{ widget.button_label || '#{defaultBtnLabel}' }}]
                    button.btn-style-b(ng-cloak ng-click="setTheme('style-b')") #[span {{ widget.button_label || '#{defaultBtnLabel}' }}]
                span.title Call Configuration
                .boxPanel
                  .form-group
                    label.control-label SIP URI
                      span.badge(data-toggle='tooltip' data-placement="right" title="This is the SIP address where inbound traffic from your Click2Vox button will be directed. Select one of yours SIP URIs or use one of our diagnostic URIs – echo@ivrs or digits@ivrs") ?

                    select.form-control(
                      ng-model="widget.sip_uri" name="sip_uri" required
                      ng-options="sip for sip in #{JSON.stringify(currentUser.getSipURIsWithNewSipUri())}")
                      option(value="") Select a SIP URI

                    .error-label(ng-cloak ng-show="widget_form.sip_uri.$touched")
                      div(ng-show="widget_form.sip_uri.$error.required") SIP URI required

                  .form-group(ng-cloak ng-show="widget.sip_uri == 'Add a new SIP URI'")
                    if currentUser.sip_uris.length == 0 || currentUser.paid && false
                      label.control-label Enter a new SIP URI
                      input.form-control(type="text" name="new_sip_uri" ng-model="widget.new_sip_uri" ng-pattern="/^[^@]+@[^@]+$/" placeholder="i.e. echo@ivrs" check-allowed-sip)

                      .error-label
                        div(ng-show="widget_form.new_sip_uri.$error.notallowed") SIP URI not allowed
                        div(ng-show="widget_form.new_sip_uri.$error.required") SIP URI is required
                        div(ng-show="widget_form.new_sip_uri.$error.pattern") SIP URI must be valid i.e: user@ivrs.voxbone.com
                    else
                      include ../account/coming-soon-modal

                  .panel.panel-default
                    .panel-heading
                      a.collapsed.title-toggle(data-toggle="collapse", data-target="#collapseAdvancedCallConfiguration", href="#collapseAdvancedCallConfiguration") Advanced Call Configuration
                    .panel-collapse.collapse#collapseAdvancedCallConfiguration
                      .options-wrap.active
                        .form-group
                          label(for="btn-context") Caller ID
                            span.badge(data-toggle='tooltip' data-placement="right" title="Enter the Caller ID that you would like sent with your Click2Vox widget calls (Only valid URI characters will be sent)") ?
                          input.form-control(type="text" name="caller_id" ng-model="widget.caller_id" value="click2vox" placeholder="i.e. click2vox_demo")
                        .form-group
                          label(for="btn-context") Context
                            span.badge(data-toggle='tooltip' data-placement="right" title="Send custom data to your SIP server using the X-Voxbone-Context header. Make sure to configure your SIP server to process this header.") ?
                          input.form-control(type="text" name="context" ng-model="widget.context")
                        .form-group
                          label(for="btn-context")
                            input(type="checkbox" name="dial_pad" ng-model="widget.dial_pad")
                            span DTMF Dial Pad
                            span.badge(data-toggle='tooltip' data-placement="right" title="Display a dialpad to allow your users to enter DTMF digits during a call.") ?
                        .form-group
                          label(for="btn-context") Send Digits #[span.badge(data-toggle='tooltip' data-placement="right" data-html="true" title="Automatically send DTMF digit(s) after a call is connected. This is useful for automatically navigating IVRs or entering access codes for a conference bridge. Digits should use the following format: <br><br>1,2,3,1200ms,4,5,900ms,6,#<br><br>This string will generate 1 2 3, wait 1200 milliseconds, enter 4, 5, wait 900 milliseconds then enter 6, #") ?]
                          input.form-control(type="text" name="send_digits" ng-model="widget.send_digits")
                  .panel.panel-default
                    .panel-heading
                      a.collapsed.title-toggle(data-toggle="collapse" data-target="#collapseIncompatileBrowserConfiguration" href="#collapseIncompatileBrowserConfiguration") Incompatible Browser Configuration
                    .panel-collapse.collapse#collapseIncompatileBrowserConfiguration
                      .options-wrap.active.incompatible
                        .form-group
                          label.hide_widget
                            input(type='radio' name='incompatible_browser_configuration' ng-model='widget.incompatible_browser_configuration' value="hide_widget")
                            span.radio-name Hide the widget
                            span.badge(data-toggle='tooltip' data-placement="right" title="If the visitor’s browser does not support WebRTC, hide the widget") ?
                        .form-group
                          label.link_button_to_a_page
                            input(type='radio' name='incompatible_browser_configuration' ng-model="widget.incompatible_browser_configuration" value="link_button_to_a_page")
                            span.radio-name Link button to a page
                            span.badge(data-toggle='tooltip' data-placement="right" title="If the visitor’s browser does not support WebRTC, specify a URL to go to when the button is clicked") ?
                            input.form-control(http-prefix type="url" name="link_button_to_a_page_value" ng-model="widget.link_button_to_a_page_value" ng-show="widget.incompatible_browser_configuration == 'link_button_to_a_page'" placeholder="i.e. https://mysite.com")
                        .form-group
                          label.show_text_html
                            input(type='radio' name='incompatible_browser_configuration' ng-model="widget.incompatible_browser_configuration" value="show_text_html")
                            span.radio-name Show text/HTML
                            span.badge(data-toggle='tooltip' data-placement="right" title="Instead of showing the button, display the entered HTML ") ?
                            textarea.form-control(type="text" name="show_text_html_value", placeholder="Enter text or HTML" ng-show="widget.incompatible_browser_configuration == 'show_text_html'" ng-model="widget.show_text_html_value")

          .col-md-6.right-col
            .section
              span.title Widget Preview in a Browser:
              ul.nav.nav-tabs(ng-cloak)
                li(ng-class="{active:previewButton}" ng-click="previewButton = true")
                  a(data-toggle="tab" href="#") Button #[span.badge(data-toggle='tooltip' data-placement="right" data-html="true" data-width="350" title="TBD") ?]
                li(ng-class="{active:!previewButton}" ng-click="previewButton = false" ng-show="preview_webrtc_compatible")
                  a(data-toggle="tab" href="#") Phone #[span.badge(data-toggle='tooltip' data-placement="right" data-html="true" data-width="350" title="TBD") ?]
                li.pull-right.active(ng-click="previewButton = true; preview_webrtc_compatible = !preview_webrtc_compatible")
                  a(data-toggle="tab" href="#" style="cursor: pointer;") {{ preview_webrtc_compatible ? "WebRTC Browser View" : "Non-WebRTC Browser View" }}

              .boxPanel.preview
                .prev-view.light
                  #widget-preview(ng-show="!previewButton")
                    .vox-widget-wrapper-preview
                      .vw-main
                        .vw-header
                          span.vw-title#vw-title [Call Status]
                          .vw-actions
                            a#full-screen(ng-click="previewFullScreen = !previewFullScreen")
                              i(ng-class="{'vw-icon  vx-icon-full-screen-on':!previewFullScreen, 'vw-icon  vx-icon-full-screen-off':previewFullScreen}")
                            a
                              i.vw-icon.vx-icon-close
                        .vw-body#vw-body(ng-show="previewFullScreen")
                          #vw-in-call
                            .vw-btn-group#vw-btn-group
                              a(ng-click="previewMute = !previewMute")
                                i.vw-icon.vx-icon-mic
                                #microphone.int-sensor
                                  em#mic5(ng-class="{off:previewMute}")
                                  em#mic4(ng-class="{off:previewMute}")
                                  em#mic3(ng-class="{off:previewMute}")
                                  em#mic2(ng-class="{off:previewMute}")
                                  em#mic1(ng-class="{off:previewMute}")
                              a#dialpad(ng-show="widget.dial_pad" ng-class="{active:previewDialpad}" ng-click="previewDialpad = !previewDialpad")
                                i.vw-icon.vx-icon-pad
                            a.vw-end-call
                              i.vw-icon.vx-icon-phone
                              span End Call
                            .vw-dialpad#vw-dialpad(ng-show="widget.dial_pad && previewDialpad")
                              ul
                                li.vw-tl 1
                                li 2
                                li.vw-tr 3
                                li 4
                                li 5
                                li 6
                                li 7
                                li 8
                                li 9
                                li.vw-bl *
                                li 0
                                li.vw-br #
                          #vw-footer.vw-footer
                            a(href="https://voxbone.com" target="_blank") powered by:
                  #button-preview(ng-show="previewButton")
                    .not-supported#not-supported-message(ng-show="!showCallButton()" ng-bind-html="getHiddenButtonText()")
                    .widget-box#launch_call_div(ng-class="widget.button_style" ng-show="showCallButton()")
                      button.btn-style.launch_call#launch_call_preview(ng-cloak ng-disabled="!widget.sip_uri" qtip="You can click the button to make a call and test the service!<br>(save your configuration before you test)" qtip-disable="!isWebRTCSupported() || !preview_webrtc_compatible" qtip-title="Try it!") #[span {{widget.button_label || 'Call Sales'}}]
                      .widget-footer-left
                        a(href="https://test.webrtc.org/" target="_blank") Test your setup
                      .widget-footer-right
                        a(href="https://voxbone.com" target="_blank") powered by:
                  .togle-bg
                    a.dark(href="javascript:void(0)" ng-click="widget.background_style = 'dark'")
                    a.grey(href="javascript:void(0)" ng-click="widget.background_style = 'grey'")
                    a.light(href="javascript:void(0)" ng-click="widget.background_style = 'light'")

                .prev-code
                  .title
                    span Widget Code Snippet
                      p Paste the following HTML code into your website or give it a try using on

                  .widget-code-wrap
                    .sample.shadow-z-2#widget_code
                      pre(ng-cloak)
                        {{ widget.widget_code }}

              div(ng-cloak)
                .error-label(ng-show="savingError")
                  div(ng-bind="savingError")

                .pull-right
                  button.btn.btn-danger.btn-xs(style='margin-right: 5px;' ng-cloak ng-click='discardConfiguration(widget_form)' ng-disabled="savingConfig || !widget_form.$dirty") Discard Changes
                  button#saveConfig.btn.btn-success.btn-lg(ng-cloak ng-click='saveConfiguration()' ng-disabled="widget_form.$invalid || savingConfig || widget_form.$pristine || sipDirty") {{submitText}}
